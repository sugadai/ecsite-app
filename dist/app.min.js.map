{"version":3,"sources":["app.js"],"names":["require","render","express","mysql","con","productrouter","app","bodyParser","set","router","use","urlencoded","session","secret","resave","saveUninitialized","httpOnly","sameSite","cookie","log","req","username","undefined","userid","console","locals","maxAge","res","email","connect","err","next","listen","PORT","concat"],"mappings":"0BAAmBA,QAAQ,OAAnBC,gBAAAA,OACFC,QAAUF,QAAQ,WAClBG,MAAQH,QAFY,SAAlBC,WAGWD,QAHXC,eAIFG,IAAMJ,QAAQ,kBAHdE,OAAUF,QAAQ,mBAKlBK,cAAgBL,QAAQ,0BAJxBG,QAAQH,QAAQ,mBAMhBM,IAAMJ,UALNK,KAAAA,IASND,IAAIE,IAAI,cAAe,OAPvBF,IAAMG,IAAAA,QAAST,OAAQ,WASvBM,IAAII,IAAIH,WAAWI,WAAW,CARxBN,UAAAA,KACNC,IAAMM,IAAAA,QAAUZ,QAWhBM,IAAII,IAVEJ,QAAMJ,CACFW,OAWM,kBACRC,QAAQ,EATRC,mBAAe,EACfb,OAAO,CAEDc,UAAA,EADdC,SAAA,SAGQf,OAAA,UAKAa,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,GACAG,QAAQC,IAAAC,EAAAR,QAAAS,eACJC,IAAAF,EAAAR,QAAAW,QACAP,QAAUG,IAFNC,EAAAR,QAAAW,QAEYC,QAAAL,IAAA,eAChBF,EAAQQ,OAAEJ,SAHN,QAIJK,EAAQD,OAAAJ,SAAeD,EAAKR,QAAAS,SAYhCM,EAAIF,OAAOG,MAAQR,EAAIR,QAAQgB,MAhBvBJ,QAAAL,IAAA,cAAAC,EAAAR,QAAAW,SASZC,MACAlB,IAAAI,IAAGU,WAAYG,QASdnB,IAAAyB,QAAA,SAAAC,GAYD,GAAGA,EAAK,MAAMA,EAXdC,QAAIZ,IAAA,uBAMRb,IAAA0B,OAAAC,KAAAT,QAAAL,IAAA,+BAAAe,OAAAD","file":"app.min.js","sourcesContent":["const { render } = require('ejs');\nconst express = require('express');\nconst mysql = require('mysql');\nconst bodyParser = require('body-parser');\nconst con = require('./db/dbconnect');\nconst router = require('./routes/router');\nconst productrouter = require('./routes/productrouter')\nconst session = require('express-session');\nconst app = express();\nconst PORT = 3000;\n\n// set the view engine to ejs\napp.set('view engine', 'ejs');\napp.use(express.static('public'));\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.use(express.json());\napp.use(\n    session({\n        secret: 'your_secret_key',\n        resave: false,\n        saveUninitialized: true,\n        cookie: {\n            // secure: true, // HTTPSを使用\n            httpOnly: true, // XSS攻撃を防ぐ\n            sameSite: 'strict', // CSRF攻撃を防ぐ\n            maxAge: 24 * 60 * 60 * 1000 // セッションの有効期限を設定（例: 24時間）\n        }\n    })\n);\napp.use((req,res,next)=>{\n    console.log(req.session.username)\n    if(req.session.userid  === undefined){\n        console.log(req.session.userid)\n        console.log('ログインしていません。')\n        res.locals.username = 'ゲスト'\n    }else{\n        res.locals.username = req.session.username;\n        res.locals.email = req.session.email;\n        console.log('ログイン中ユーザーID'+req.session.userid)\n     \n    }\n    next();\n})\napp.use('/api/v1/',router)\n// app.use('/producttask',productrouter)\n\n// app.get('/',(req,res)=>{\n//     res.render('testpage.ejs');\n// })\n\n//DB Connection\ncon.connect((err)=>{\n    if(err) throw err\n    console.log('MySQL Connection!')\n})\n\n//Server Start\napp.listen(PORT,console.log(`Server Start on port Number ${PORT}`));"]}