{"version":3,"sources":["app.js"],"names":["require","render","express","mysql","bodyParser","con","router","productrouter","session","app","PORT","set","use","urlencoded","extended","json","secret","resave","saveUninitialized","cookie","httpOnly","sameSite","maxAge","req","res","next","console","log","username","userid","undefined","locals","email","addProduct","connect","err","listen"],"mappings":"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","sourcesContent":["const { render } = require('ejs');\nconst express = require('express');\nconst mysql = require('mysql');\nconst bodyParser = require('body-parser');\nconst con = require('./db/dbconnect');\nconst router = require('./routes/router');\nconst productrouter = require('./routes/productrouter')\nconst session = require('express-session');\nconst app = express();\nconst PORT = 3000;\n\n// set the view engine to ejs\napp.set('view engine', 'ejs');\napp.use(express.static('public'));\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.use(express.json());\napp.use(\n    session({\n        secret: 'your_secret_key',\n        resave: false,\n        saveUninitialized: true,\n        cookie: {\n            // secure: true, // HTTPSを使用\n            httpOnly: true, // XSS攻撃を防ぐ\n            sameSite: 'strict', // CSRF攻撃を防ぐ\n            maxAge: 24 * 60 * 60 * 1000 // セッションの有効期限を設定（例: 24時間）\n        }\n    })\n);\napp.use((req,res,next)=>{\n    console.log(req.session.username)\n    if(req.session.userid  === undefined){\n        console.log(req.session.userid)\n        console.log('ログインしていません。')\n        res.locals.username = 'ゲスト'\n    }else{\n        res.locals.username = req.session.username;\n        res.locals.email = req.session.email;\n        if(req.session.addProduct !== undefined){\n            console.log('a')\n            res.locals.addProduct = req.session.addProduct;\n        }\n        console.log(req.session.addProduct);\n        console.log('ログイン中ユーザーID'+req.session.userid)\n    }\n    next();\n})\napp.use('/api/v1/',router)\n// app.use('/producttask',productrouter)\n\n// app.get('/',(req,res)=>{\n//     res.render('testpage.ejs');\n// })\n\n//DB Connection\ncon.connect((err)=>{\n    if(err) throw err\n    console.log('MySQL Connection!')\n})\n\n//Server Start\napp.listen(PORT,console.log(`Server Start on port Number ${PORT}`));"],"file":"app.dev.js"}