{"version":3,"sources":["task.js"],"names":["require","query","con","search","req","res","send","SignIn","username","body","password","errMsg","usernameErrMsg","passwordErrMsg","console","log","error","result","length","session","userid","id","email","redirect","SignUp","insertId","SignOut","destroy","err","new_password","addProduct","productname","price","imgpath","category_id","sql","module","exports"],"mappings":"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","sourcesContent":["const { query } = require('express');\nconst con = require('../db/dbconnect')\n\n//商品検索\nconst search = (req,res) => {\n    res.send('puroduct search')\n}\n\n\n//ログイン\nconst SignIn = (req,res) =>{\n    // console.log(req.body)\n    const username = req.body.username;\n    const password = req.body.password;\n\n    const errMsg = {\n        usernameErrMsg : '',\n        passwordErrMsg : ''\n    }\n    if(username == '' ){\n        errMsg.usernameErrMsg = 'ユーザ名を入力してください';\n    }\n    if(password == ''){\n        errMsg.passwordErrMsg = 'パスワードを入力してください';\n    }\n    \n    console.log(errMsg)\n    con.query(\n        'SELECT * FROM USERS WHERE username=? AND password=?;'\n        ,[username,password],\n        (error,result)=>{\n            if(error) throw error;\n            console.log(result[0])\n            if(result.length){\n                req.session.userid = result[0].id;\n                console.log('ログイン成功ユーザーID： '+req.session.userid);\n                req.session.username = result[0].username;\n                req.session.email = result[0].email;\n                if(req.session.userid === 1){\n                    res.redirect('/api/v1/adminpage');\n                } else{\n                    res.redirect(`/api/v1/userpage`);\n                }\n                // console.log(req.session.username)\n                // res.render('userpage.ejs',{username: result[0].username});\n            }else{\n                console.log('認証に失敗しました')\n                res.redirect('/api/v1/signin')\n            }\n        }\n    )\n}\n\n//会員登録\nconst SignUp = (req,res) =>{\n    \n    const username = req.body.username;\n    const email = req.body.email;\n    const password = req.body.password;\n    // console.log(username,email,password)\n    con.query(\n        'INSERT INTO USERS (username,email,password) value(?,?,?);'\n        ,[username,email,password],\n        (error,result)=>{\n            console.log(result.insertId)\n            req.session.userid = result.insertId;\n            req.session.username = username\n            req.session.email = email;\n            console.log('会員登録されたユーザID：'+result.insertId)\n            if(error) throw error;\n            res.redirect(`/api/v1/userpage`)\n        }\n    )\n}\n\nconst SignOut = (req,res)=>{\n    console.log('a')\n    req.session.destroy((err)=>{\n        if(err) throw err\n    });\n    \n    console.log('ログアウト完了')\n    res.redirect('/api/v1');\n}\n\nconst password = (req,res) => {\n    const new_password = req.body.new_password\n    const userid = req.session.userid;\n    // console.log(new_password + ' ' + req.session.userid);\n    // sql = 'UPDATE users SET password = ? WHERE id = ?;';\n    con.query(\n        'UPDATE users SET password = ? WHERE id = ?;',\n        [new_password,userid],\n        (err,result)=>{\n            if(err) throw err\n            console.log('パスワード変更完了　ユーザID：' + userid);\n            res.redirect(`/api/v1/userpage`)\n        })\n}\n\n//商品追加\nconst addProduct = (req,res) =>{\n    // console.log(req.body)\n    const productname =  req.body.productname;\n    const price = req.body.price;\n    const imgpath = req.body.imgpath;\n    const category_id = req.body.category_id;\n    const sql = 'INSERT INTO product(productname,price,imgpath,category_id) value(?,?,?,?);'\n    con.query(\n        sql,\n        [productname,price,imgpath,category_id],\n        (err,result)=>{\n            if(err) throw err\n            console.log('商品追加完了')\n            req.session.addProduct = req.body;\n            console.log(req.session.addProduct)\n            res.redirect('/api/v1/addProductConfirm')\n        })\n}\n\nmodule.exports = {SignIn,SignUp,SignOut,password,search,addProduct}\n\n\n\n// const search = async (req,res) =>{\n//     console.log(req.query.puroduct);\n//     const client_id = `dj00aiZpPUhPVW9ISXpNN3Q0RSZzPWNvbnN1bWVyc2VjcmV0Jng9Mjc-`;\n//     // const query = req.query.puroduct;\n//     // const url = `https://shopping.yahooapis.jp/ShoppingWebService/V2/itemSearch?appid=${client_id}>query=${query}`;\n//     const params = {\n//         response_type : 'code',\n//         client_id : client_id,\n//         redirect_uri : `https://www.yahoo.co.jp/`,\n//         scope : 'email'\n//     }\n    \n//     const query = new URLSearchParams(params);\n\n//     const url = `https://auth.login.yahoo.co.jp/yconnect/v2/authorization?response_type=code&client_id=${client_id}&redirect_uri=https://www.yahoo.co.jp/&scope=openid`\n//     console.log(url)\n\n//     try {\n//         const resdata =  await fetch(url)\n//         console.log(resdata)\n//         const data = await resdata.json();\n//         console.log(data);\n//         res.send(resdata);\n//     } catch (error) {\n//         res.send(error.status)\n//     }\n// }"],"file":"task.dev.js"}