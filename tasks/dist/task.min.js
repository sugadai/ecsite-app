"use strict";var _require=require("express"),query=_require.query,con=require("../db/dbconnect"),search=function(s,e){e.send("puroduct search")},SignIn=function(r,o){var s=r.body.username,e=r.body.password,n={usernameErrMsg:"",passwordErrMsg:""};""==s&&(n.usernameErrMsg="ユーザ名を入力してください"),""==e&&(n.passwordErrMsg="パスワードを入力してください"),console.log(n),con.query("SELECT * FROM USERS WHERE username=? AND password=?;",[s,e],function(s,e){if(s)throw s;console.log(e[0]),e.length?(r.session.userid=e[0].id,console.log("ログイン成功ユーザーID： "+r.session.userid),r.session.username=e[0].username,r.session.email=e[0].email,o.redirect("/api/v1/userpage")):(console.log("認証に失敗しました"),o.redirect("/api/v1/signin"))})},SignUp=function(r,o){var n=r.body.username,i=r.body.email,s=r.body.password;con.query("INSERT INTO USERS (username,email,password) value(?,?,?);",[n,i,s],function(s,e){if(console.log(e.insertId),r.session.userid=e.insertId,r.session.username=n,r.session.email=i,console.log("会員登録されたユーザID："+e.insertId),s)throw s;o.redirect("/api/v1/userpage")})},SignOut=function(s,e){console.log("a"),s.session.destroy(function(s){if(s)throw s}),console.log("ログアウト完了"),e.redirect("/api/v1")},password=function(s,r){var e=s.body.new_password,o=s.session.userid;con.query("UPDATE users SET password = ? WHERE id = ?;",[e,o],function(s,e){if(s)throw s;console.log("パスワード変更完了　ユーザID："+o),r.redirect("/api/v1/userpage")})};module.exports={SignIn:SignIn,SignUp:SignUp,SignOut:SignOut,password:password,search:search};
//# sourceMappingURL=task.min.js.map
